#-------------------------------------------------------For_statements-----------------------------------------------------#
# for statement syntax #
for (<init>; <condition>; <repeat>) {
        <statement list>
}
# >> <init> == initializing the value // also called declaring the variable
# >> <condition> == the condition to run the script
# >> <repeat> == repeats the condition set for the parameter

#-----------------------------------------------------------
# for [lt] //example #
for ($i = 0; $i -lt 10; $i ++) {
        $i
}
# // output >> 0,1,2,3,4,5,6,7,8,9

#-----------------------------------------------------------
# for [lt] //example #
for ($i = 5; $i -lt 10; $i ++) {
        $i
}
# // output >> 5,6,7,8,9

#-----------------------------------------------------------
# for [lt] //example #
for ($i = 8; $i -lt 10; $i ++) {
        $i
}
# // output >> 8,9

#-----------------------------------------------------------
# for [le] //example #
for ($i = 0; $i -le 10; $i ++) {
        $i
}
# // output >> 0,1,2,3,4,5,6,7,8,9,10

#-----------------------------------------------------------
# for [le] //example #
for ($i = 5; $i -le 10; $i ++) {
        $i
}
# // output >> 5,6,7,8,9,10

#-----------------------------------------------------------
# for [le] //example #
for ($i = 9; $i -le 10; $i ++) {
        $i
}
# // output >> 9,10

#-----------------------------------------------------------
# flexible for statement [le] #
for ($i = 0; $i -le 10; $i+=2) {
        $i
}
# // output >> 0,2,4,6,8,10

#-----------------------------------------------------------
# flexible for statement [lt] #
for ($i = 0; $i -lt 10; $i+=2) {
        $i
}
# // output >> 0,2,4,6,8

#-----------------------------------------------------------
# flexible for statement [le] #
for ($i = 8; $i -le 10; $i+=2) {
        $i
}
# // output >> 8,10

#-----------------------------------------------------------
# flexible for statement [lt] #
for ($i = 8; $i -lt 10; $i+=2) {
        $i
}
# // output >> 8

#-----------------------------------------------------------
# flexible for statement [lt] #
for ($i = -8; $i -lt 10; $i+=2) {
        $i
}
# // output >> -8,-6,-4,-2,0,2,,4,6,8

#-----------------------------------------------------------
# flexible for statement [le] #
for ($i = -10; $i -le 10; $i+=2) {
        $i
}
# // output >> -10,-8,-6,-4,-2,0,2,4,6,8,10

#--------------------------------------------------------------
# next-level for statment #
$arr = 1,2,3,4,5,6,7,8,9,10
for ($i = 5; $i -lt $arr.Length; $i++) {
        $arr[$i]
}
# // output 6,7,8,9,10

#--------------------------------------------------------------
# next-level for statment #
$arr = 1,2,3,4,5,6,7,8,9,10
for ($i = 5; $i -lt $arr.Length; $i++) {
        $arr
}
# // output  == writes the array 5 times in a row #

#--------------------------------------------------------------
# next-level for statment #
$arr = 1,2,3,4,5,6,7,8,9,10
for ($i = 9; $i -lt $arr.Length; $i++) {
        $arr
}
# // output  == writes the array 1 time in a row #


#--------------------------------------------------------------
# next-level for statment #
$arr = 1,2,3,4,5,6,7,8,9,10
for ($i = 3; $i -lt $arr.Length; $i++) {
        $arr
}
# // output  == writes the array 7 times in a row #

#--------------------------------------------------------------
# next-level for statment #
$arr = 1,2,3,4,5,6,7,8,9,10
for ($i = 5; $i -lt $arr.Length; $i+=2) {
        $arr[$i]
}
# // output 6,8,10 >> starts from its [indexed] position not the number

#--------------------------------------------------------------
# next-level for statment #
$arr = 1,2,3,4,5,6,7,8,9,10
for ($i = 2; $i -lt $arr.Length; $i+=2) {
        $arr[$i]
}
# // output 3,5,7,9 >> starts from its [indexed] position not the number

#--------------------------------------------------------------
# next-level for statment #
$arr = 1,2,3,4,5,6,7,8,9,10
for ($i = 1; $i -lt $arr.Length; $i+=2) {
        $arr[$i]
}
# // output 2,4,6,8,10 >> starts from its [indexed] position not the number
